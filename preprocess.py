import pandas as pd import numpy as npimport cv2from glob import globimport os from numpy.lib.stride_tricks import sliding_window_viewfrom skimage.feature import hogdef mkdir(path):    try :        os.makedirs(path)    except :        passmkdir("./dataset/images")    mkdir("./dataset/masks")dataset=glob("./data/rgbs_colorNormalized/*.png")dataset=pd.DataFrame(dataset,columns=["image"])dataset["mask"]=dataset["image"].apply(lambda x : "./data/masks/"+x.rsplit("/")[-1])def read_img_msk(dataset,index):    img,msk=dataset.iloc[index][["image","mask"]]    image=cv2.imread(img)    mask=cv2.imread(msk, cv2.IMREAD_GRAYSCALE)    return (image , mask)img,msk=read_img_msk(dataset,1)def create_sample(img,msk,window_size=504,stride=250):    imgs=np.squeeze(sliding_window_view(img,(window_size,window_size,3)))[::stride,::stride]      msks=sliding_window_view(msk,(window_size,window_size))[::stride,::stride]      return(np.vstack(imgs),np.vstack(msks))len_dataset=len(dataset)for index in dataset.index:    img,msk=read_img_msk(dataset,index)    imgs,msks=create_sample(img,msk)    for i in range(msks.shape[0]):        # fd, hog_image=hog(imgs[i],orientations=4, pixels_per_cell=(2,2),        #            	cells_per_block=(2, 2), visualize=True, channel_axis=2)        cv2.imwrite(f"./dataset/images/{index+1}_{i+1}.png",imgs[i])        cv2.imwrite(f"./dataset/masks/{index+1}_{i+1}.png",msks[i])    print(f"image {index+1}/{len_dataset} : Done!")                                                                            